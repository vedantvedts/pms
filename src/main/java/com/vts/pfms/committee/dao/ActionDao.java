package com.vts.pfms.committee.dao;

import java.sql.Date;
import java.util.List;

import com.vts.pfms.committee.dto.ActionAssignDto;
import com.vts.pfms.committee.model.ActionAssign;
import com.vts.pfms.committee.model.ActionAttachment;
import com.vts.pfms.committee.model.ActionMain;
import com.vts.pfms.committee.model.ActionMainAttachment;
import com.vts.pfms.committee.model.ActionSelf;
import com.vts.pfms.committee.model.ActionSub;
import com.vts.pfms.committee.model.FavouriteList;
import com.vts.pfms.committee.model.OldRfaUpload;
import com.vts.pfms.committee.model.PfmsNotification;
import com.vts.pfms.committee.model.RfaAction;
import com.vts.pfms.committee.model.RfaAssign;
import com.vts.pfms.committee.model.RfaAttachment;
import com.vts.pfms.committee.model.RfaCC;
import com.vts.pfms.committee.model.RfaInspection;
import com.vts.pfms.committee.model.RfaTransaction;
import com.vts.pfms.committee.model.RfaAttachment;

public interface ActionDao {

	public List<Object[]> EmployeeList(String LabCode) throws Exception; 
	public List<Object[]> AssignedList(String EmpId) throws Exception;
	public long ActionMainInsert(ActionMain main)throws Exception;
	public long ActionAssignInsert(ActionAssign assign)throws Exception;
	public List<Object[]> AssigneeList(String EmpId) throws Exception;
	public List<Object[]> AssigneeData(String MainId ,String assignid) throws Exception;
	public List<Object[]> SubList(String assignid) throws Exception;
	public long ActionSubInsert(ActionSub main)throws Exception;
	public long ActionAttachInsert(ActionAttachment main)throws Exception;
	public ActionAttachment ActionAttachmentDownload(String achmentid) throws Exception;
	public int ActionSubDelete(String id) throws Exception;
	public long AssignUpdate(ActionAssign assign) throws Exception;
	public int MainForward(ActionAssign assign) throws Exception;
	public List<Object[]> ForwardList(String EmpId) throws Exception;
	public long MainSendBack(ActionAssign assign) throws Exception;
	public List<Object[]> StatusList(String EmpId,String fdate, String tdate) throws Exception;
	public List<Object[]> ActionList(String EmpId) throws Exception;
	public List<Object[]> CommitteeActionList(String EmpId) throws Exception;
	public Object[] CommitteeScheduleEditData(String CommitteeScheduleId) throws Exception ;
	public List<Object[]> ScheduleActionList(String ScheduleId) throws Exception;
	public List<Object[]> MeetingContent(String ScheduleId) throws Exception;
	public Object[] LabDetails() throws Exception;
	public int ActionGenCount(String ProjectId, String type) throws Exception;
	public long ActionNotificationInsert(PfmsNotification ProjectId) throws Exception;
	public List<Object[]> ActionNoSearch(String ActionMainId) throws Exception;
	public List <Object[]> AssigneeDetails(String assignid) throws Exception;
	public List<Object[]> ScheduleActionItem(String ScheduleId) throws Exception;
	public List<Object[]> ActionReports(String EmpId,String Term,String Position,String Type,String LabCode) throws Exception ;
	public List<Object[]> ActionSearch(String EmpId,String No,String Position) throws Exception;
	public List<Object[]> ProjectList() throws Exception;
	public List<Object[]> ActionCountList(String ProjectId) throws Exception;
	public List<Object[]> projectdetailsList(String EmpId) throws Exception;
	public List<Object[]> ActionWiseReports(String Term,String ProjectId) throws Exception ;
	public List<Object[]> ActionNotification( String MainId , String assignid) throws Exception;
	public List<Object[]> ActionPdcReports(String Emp,String ProjectId,String Position,Date From,Date To ) throws Exception ;
	public String ProjectCode(String ProjectId) throws Exception;
	public List<Object[]> ActionSelfList(String EmpId)throws Exception;
	public List<Object[]> SearchDetails(String MainId , String assignid) throws Exception;
	public List<Object[]> allprojectdetailsList() throws Exception;	
	public List<Object[]> ActionWiseAllReport(String ProjectId) throws Exception;
	public long ActionSelfReminderAddSubmit(ActionSelf actionself) throws Exception;
	public List<Object[]> ActionSelfReminderList(String empid,String fromdate,String todate) throws Exception;
	public int ActionSelfReminderDelete(String actionid) throws Exception;
	public List<Object[]> getActionAlertList() throws Exception;
	public List<Object[]> getActionToday(String empid,String ai) throws Exception;
	public List<Object[]> getActionTommo(String empid,String ai) throws Exception;
	public List<Object[]> getMeetingAlertList() throws Exception;
	public List<Object[]> getMeetingToday(String empid) throws Exception;
	public List<Object[]> getMeetingTommo(String empid) throws Exception;
	public List<Object[]> LoginProjectDetailsList(String empid,String Logintype,String LabCode) throws Exception;
	public List<Object[]> AllEmpNameDesigList() throws Exception;
	public Object[] GetActionReAssignData(String Actionassignid)throws Exception;
	public Object[] GetProjectData(String projectid)throws Exception;
	public List<Object[]> ProjectEmpList(String projectid) throws Exception;
	public Object[] CommitteeShortName(String scheduleid) throws Exception;
	public List<Object[]> EmployeeDropdown(String empid, String logintype,String projectid) throws Exception;
	public int AssigneeSeenUpdate(String EmpId) throws Exception;
	public Object[] ActionDetailsAjax(String actionid , String assignid) throws Exception;
	public int ActionMainEdit(ActionMain main) throws Exception;
	public int ActionAssignEdit(ActionAssign assign) throws Exception;
	public List<Object[]> AllLabList() throws Exception;
	public Object[] GetActionMainData(String actionmainid)throws Exception;
	public List<Object[]> ClusterExpertsList() throws Exception;
	public List<Object[]> ClusterFilterExpertsList(String Labcode , String MainId)throws Exception;
	public Object[] LabInfoClusterLab(String LabCode) throws Exception;
	public List<Object[]> LabEmployeeList(String LabCode) throws Exception;
	public List<Object[]> LabEmpListFilterForAction(String LabCode , String MainId) throws Exception;
	public int ActionAssignRevisionEdit(ActionAssign assign) throws Exception;
	public List<Object[]> ActionSubLevelsList(String ActionAssignId) throws Exception;
	public List<Object[]> ActionSubList(String assignid) throws Exception;
	public List<Object[]> ActionSubLevelsListForClose(String ActionAssignId) throws Exception;
	public List<Object[]> GetIssueList(String empid)throws Exception;
	public List<Object[]> GetRecomendationList(String projectid ,  String committeid)throws Exception;
	public List<Object[]> GetDecisionList(String projectid ,  String committeid)throws Exception;
	public Object[] ActionAssignDataAjax(String assignid) throws Exception;
	public List<Object[]> GetRecDecSoughtList(String projectid,String  committeeid , String type)throws Exception;
	public List<Object[]> getActualDecOrRecSought(String scheduleid, String type)throws Exception;
	public List<Object[]> getDecOrRecSought(String scheduleid , String type)throws Exception;
	public List<Object[]> GetActionList(String empid)throws Exception;
	public List<Object[]> ActionMonitoring(String ProjectId, String Status) throws Exception;
	public List<Object[]> GetActionListForFevorite(Date fromdate , Date todate , String projectid , String  empid)throws Exception;
	public Long AddFavouriteList(FavouriteList fav) throws Exception;	
	public List<Object[]> GetFavouriteList(String empid)throws Exception;
	public ActionAssign getActionAssign(String actionassignId) throws Exception;
	public List<Object[]> GetRfaActionList(String EmpId,String projectType,String projectId,String initiationId,String fdate,String tdate) throws Exception;
	public List<Object[]> ProjectTypeList() throws Exception;
	public List<Object[]> PriorityList() throws Exception;
	public Long RfaActionSubmit(RfaAction rfa) throws Exception;
	public Object[] GetDivisionCode(String Division) throws Exception;
	public Long GetRfaCount(String rfatypeid, Long projectId,String type,String vendor) throws Exception;
	
	public Object[] RfaActionEdit(String rfaid) throws Exception;
	//public int RfaInspectionEdit(String rfaid) throws Exception;
	public Long RfaEditSubmit(RfaAction rfa)throws Exception;
    public Object[] RfaLabDetails(String LabCode) throws Exception;
	public Object[] RfaPrintData(String rfaid)throws Exception;
	public List<Object[]> RfaForwardList(String EmpId)throws Exception;
	public List<Object[]> RfaInspectionApprovalList(String EmpId)throws Exception;
	public List<Object[]> RfaInspectionList(String EmpId)throws Exception;
	public List<Object[]> RfaForwardApprovedList(String EmpId)throws Exception;
	public List<Object[]> RfaInspectionApprovedList(String EmpId)throws Exception;
	public List<String> ListEmps(String user,String projectid) throws Exception;
	public long RfaActionForward(List<PfmsNotification> x, RfaAction rf, List<RfaTransaction> trans, String rfa) throws Exception;
	public Object[] RfaList(String rfa,String EmpId) throws Exception;
	public String getUserId(String rfa) throws Exception;
	public String getAssineeId(String rfa) throws Exception;
	public Object[] getRfaAssign(String rfa) throws Exception;
	public Long RfaModalSubmit(RfaInspection inspection)throws Exception;
	public Object[] RfaAssignAjax(String rfaId) throws Exception;
	public Long RfaModalUpdate(RfaInspection inspection) throws Exception;
	public Long RfaReturnList(List<PfmsNotification> x, RfaAction rf, RfaTransaction tr, String rfa)throws Exception;
	public String getAssignDetails(String empId, Long rfaId)throws Exception;
	public Object[] getRfaAddData(String rfaId)throws Exception;
	public Object[] getRfaInspectionData(String rfaId)throws Exception;
	public List<Object[]> getrfaRemarks(String rfaId,String Status)throws Exception;
	public List<Object[]> ProjectApplicableCommitteeList(String projectid) throws Exception;
	public List<Object[]> MeettingCount(String committeeid, String projectid)throws Exception;
	public List<Object[]> MeettingList(String committeeid, String projectid, String scheduleid,String status)throws Exception;
	public List<Object[]> MeettingActionList(String committeeid, String projectid, String scheduleid, String empId)throws Exception;
	public List<Object[]> getAllEmployees(String flag)throws Exception;// new added
	public List<Object[]> getRfaModalEmpList(String labCode)throws Exception;
	public List<Object[]> getRfaTDList(String labCode)throws Exception;
	public List<Object[]> getRfaTransList(String rfaTransId)throws Exception;
	public Long RfaAttachment(RfaAttachment rfaAttach)throws Exception;
	public Object[] RfaAttachmentDownload(String rfaid)throws Exception;
	public int deleterfaAttachment(Long rfaId) throws Exception;
	public long updateRfaAttachment(RfaAttachment rfaAttach)throws Exception;
	public long RfaAssignInsert(RfaAssign assign)throws Exception;
	public List<Object[]> AssigneeEmpList()throws Exception;
	public Long UpdateAssigneeData(String rfaid)throws Exception;
//	public List<String> CCAssigneeList(String rfaid)throws Exception;
	public List<String> CCAssignorList(String rfaid)throws Exception;
	public int RfaActionUpdate(String rfaId)throws Exception;
	public Long updateRfaTransaction(RfaTransaction tr)throws Exception;
	public List<Object[]> GetRfaActionList1(String projectType, String projectId, String initiationId, String fdate, String tdate)throws Exception;
	public List<Object[]> RfaProjectwiseList(String empId, String projectType, String projectId, String initiationId, String fdate, String tdate)throws Exception;
	public List getmodifieddate(String userId, int pid)throws Exception;
	public List<Object[]> getProjectByDirectorID(String empId)throws Exception;
	public List<Object[]> getRecentWeeklyUpdateDate(String string)throws Exception;
	public List<Object[]> getRiskDetails(String userId, int pid)throws Exception;
	public List<Object[]> getMilestoneDate( int pid)throws Exception;
	public List<Object[]> getMeetingDate(int pid)throws Exception;
	public List<Object[]> getProdurementDate(int pid)throws Exception;
	public List<Object[]> getAllRecentUpdateList(String projectId)throws Exception;
	public Object getEmpnameById(int empId)throws Exception;
	public Object getProjectCodeById(int projectId)throws Exception;
	public Object getProjectShortNameById(int projectId)throws Exception;
	public int ActionSubDeleteUpdate(String ActionAssignId, String progress, String progressDate, String progressRemarks)throws Exception;
	public int ActionRemarksEdit(String actionAssignId, String progress, String progressRemarks, String UserId)throws Exception;
	public int actionSubRemarksEdit(String actionSubId, String progress, String progressRemarks, String UserId)throws Exception;
	public List<String> rfaMailSend(String rfa)throws Exception;
	public Object[] rodShortName(String scheduleid) throws Exception;
	public List<Object[]> getRfaType()throws Exception;
	public long rfaCCInsert(RfaCC rfaCC)throws Exception;
	public Long updateRfaCC(String rfaid)throws Exception;
	public List<Object[]> RfaCCList()throws Exception;
	public List<Object[]> rfaTotalActionList(String projectType,String projectid, String rfatypeid, String fdate, String tdate);
	public int CommitteActionEdit(ActionAssignDto actionAssign)throws Exception;
	public List<Object[]> RfaPendingCount(String empId)throws Exception;
	
	public List<Object[]> getMainIds(String scheduleMinutesId)throws Exception;
	public List<Object[]> ActionReportsNew(String empId, String term, String position, String type, String labCode,
			String loginType)throws Exception;
	public Long oldRfaUploadSubmit(OldRfaUpload rfaUpload)throws Exception;
	public List<Object[]> getoldRfaUploadList(String labCode, String projectId)throws Exception;
	public OldRfaUpload getOldRfaDetails(Long rfaFileUploadId)throws Exception;
	public long oldRfaUploadEditSubmit(OldRfaUpload rfaModel)throws Exception;
	public int getActionCountByCommittee(String projectId, String type, String committeeShortName) throws Exception;
	
	public List<Object[]> getMeetingList(long projectId, String fromDate, String toDate) throws Exception;
	public List<Object[]> getMeetingAction(long meetingId, String loginType, String empId) throws Exception;
	public int CommitteActionDelete(ActionAssignDto actionAssign) throws Exception;
	public List<Object[]> getVendorList()throws Exception;
	public RfaAttachment getAttachmentByRfaId(Long rfaId)throws Exception;
	public void saveActionMainAttachment(ActionMainAttachment attachment)throws Exception;
	public Object[] getActionMainAttachMent(String mainid)throws Exception;
	
	public List<Object[]> TotalActions()throws Exception;
	public List<Object[]> getProjects(String empId)throws Exception;
	public int ActionAssignerEdit(ActionAssign assign)throws Exception;
	public String getProjectCode(Long projectId, String projectType)throws Exception;
}
